(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{418:function(t,a,v){"use strict";v.r(a);var e=v(26),l=Object(e.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"新版本"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新版本"}},[t._v("#")]),t._v(" 新版本")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("此文为转载")]),t._v(" "),v("ul",[v("li",[t._v("来源：https://www.zhihu.com/question/360985479/answer/969066895")]),t._v(" "),v("li",[t._v("来源：https://www.zhihu.com/question/360985479/answer/1274722961")])])]),t._v(" "),v("h2",{attrs:{id:"java各版本市场占有率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java各版本市场占有率"}},[t._v("#")]),t._v(" java各版本市场占有率")]),t._v(" "),v("p",[t._v("只有Java 8, Java 11 和未来的Java 17 是长期支持版本（LTS），Oracle会支持3年，其他的只会支持6个月，新版本一出，就放弃老版本的技术支持。")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog/javaversion/javaversion.PNG",alt:"java version"}})]),t._v(" "),v("p",[t._v("这种快速的发布有好处吗？")]),t._v(" "),v("p",[t._v("有 ！ 小步快跑一直是我们软件开发的利器，采用迭代的方式，每次发布一部分功能，推向开发人员去验证，典型的敏捷思路。")]),t._v(" "),v("p",[t._v("但是这种好处更有利于JDK的开发者，对使用Java的个人和公司来说，想要跟上每六个月就要升级的步伐，实在是太难了。JDK是个非常核心的基础设施， 除了安全漏洞，谁没事去升级生产环境的JDK啊？出了问题谁负责？ 所以，按道理讲大家都会去找那些LTS的版本来升级，例如Java 11， 但是事实证明大部分人还在固守Java 8 :")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog/javaversion/adoption.PNG",alt:"java version"}})]),t._v(" "),v("h2",{attrs:{id:"java8-仍可堪大用的原因"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java8-仍可堪大用的原因"}},[t._v("#")]),t._v(" Java8 仍可堪大用的原因")]),t._v(" "),v("p",[v("strong",[t._v("收费")])]),t._v(" "),v("p",[t._v("从2019年1月开始，Oracle JDK 开始对 Java SE 8 之后的版本开始进行商用收费，确切的说是 8u201/202 之后的版本。如果你用 Java 开发的功能如果是用作商业用途的，如果还不想花钱购买的话，能免费使用的最新版本是 8u201/202。当然如果是个人客户端或者个人开发者可以免费试用 Oracle JDK 所有的版本。")]),t._v(" "),v("p",[v("strong",[t._v("对开发有利的重大特性升级很少，吸引力不够。")])]),t._v(" "),v("p",[t._v("在过去的十几年中，Java相继引入的泛型、注解、NIO、函数式编程等核心功能，极大地影响了应用程序开发的方式，你能想象现在的Java中没有注解会是什么样子吗？ 这几年的Java版本中，就缺乏这种重大功能的升级了，我把我有点印象的功能升级列一下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("版本")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("重要特性")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("Java9")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("模块化系统 Java Shell：交互式命令行控制台")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("Java10")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("局部变量类型推导")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("Java11")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("加强：Stream,String,Collection;标准化的HTTP Client；ZGC")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("Java12")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Switch表达式扩展")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("Java13")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("重新实现Socket API")])])])]),t._v(" "),v("p"),t._v(" "),v("p",[t._v("Java 9引入了模块化系统，这是个看起来很美的特性，可是对程序员来说，这是一个破坏性的更新，因为JDK做了模块化，但是很多第三方库没有做模块化， 如果想让自己的项目也模块化，很有可能是一次不断填坑的经历，尤其在使用第三方库的时候。")]),t._v(" "),v("p",[t._v("Java 11的ZGC是个有吸引力的特性，它的设计目标是：支持TB级内存容量，GC暂停时间低（<10ms），对整个程序吞吐量的影响小于15%，确实挺让人激动的！如果真的实现了，程序员就可以可劲儿造对象，而不用考虑GC了，可惜这仍然是个实验性质的版本。 至于局部变量类型推导，也只是方便了变量的声明而已。")]),t._v(" "),v("p",[t._v("一个JDK的版本如果想被广泛采用，一定得能提升开发效率（如泛型、注解），带来变革，这样才有吸引力， 如果给程序员们带来了麻烦， 大家就会用脚投票了。Java 8 已经发布5年多了，我估计再用两三年不成问题")])])}),[],!1,null,null,null);a.default=l.exports}}]);